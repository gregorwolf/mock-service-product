{
  "name": "mock-service-product",
  "description": "Basic Product mock service",
  "version": "0.0.1",
  "repository": "https://github.com/gregorwolf/mock-service-product",
  "license": "MIT",
  "engines": {
    "node": "^10"
  },
  "config": {
    "entrypoint": "server.js"
  },
  "scripts": {
    "start": "node $npm_package_config_entrypoint",
    "start:local": "cross-env PORT=3000 cds run --mocked --in-memory",
    "debug": "node --inspect=0.0.0.0:9229 $npm_package_config_entrypoint",
    "debug:brk": "node --inspect-brk=0.0.0.0:9229 $npm_package_config_entrypoint",
    "debug:legacy": "node --debug=0.0.0.0:5858 $npm_package_config_entrypoint",
    "build:docker:amd64": "docker build -t gregorwolf/mock-service-product:amd64 .",
    "build:docker:arm32v6": "docker build -t gregorwolf/mock-service-product:arm32v6 .",
    "run:docker:arm32v6": "docker run --name mock-service-product -p 3000:3000 -d gregorwolf/mock-service-product:arm32v6",
    "run:docker:amd64": "docker run --name mock-service-product -p 3000:3000 -d gregorwolf/mock-service-product:amd64",
    "stop:docker": "docker container stop mock-service-product"
  },
  "dependencies": {
    "@sap/cds": "4.1.7",
    "@sap/cds-odata-v2-adapter-proxy": "1.4.42",
    "express": "^4.17.1",
    "sqlite3": "^5.0.0"
  },
  "devDependencies": {
    "@sap/edmx2csn": "^1.0.9",
    "cross-env": "^7.0.2"
  },
  "nodemonConfig": {
    "env": {
      "NODE_HEAPDUMP_OPTIONS": "nosignal"
    }
  }
}
